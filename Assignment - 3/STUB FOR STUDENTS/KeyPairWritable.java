package bigdata.keypair;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.WritableComparable;

public class KeyPairWritable  implements WritableComparable<KeyPairWritable> {

/********* create two class attributes one for age and other for the job type********/
  int age;	
  String job;
 

  /**
   * Empty constructor - required for serialization.
   */ 
  public KeyPairWritable() {

  }

  /**
   * Constructor with two String objects provided as input.
   */ 
  public KeyPairWritable(int a, String j) {
      age = a;
      job = j;
  }

  /**
   * Serializes the fields of this object to out.
   */
  public void write(DataOutput out) throws IOException {
    out.writeInt(age);
    out.writeUTF(job);
    
  }

  /**
   * Deserializes the fields of this object from in.
   */
  public void readFields(DataInput in) throws IOException {
    age = in.readInt();
    job = in.readUTF();
  }

  /**
   * Compares this object to another KeyPairWritable object 
   */
  public int compareTo(KeyPairWritable other) {
    
	/******* your code for comparing goes here******/
	
	
  }

  /**
   * A custom method that returns the two strings in the  StringPairWritable object inside parentheses and separated by
   * a comma. For example: "(left,right)".
   */
  public String toString() {
	  return "(" + age + "," + job + ")";
  }

  /**
   * The hashCode method generates a hash code for a StringPairWritable object. The equals and hashCode methods have been automatically
   * generated by Eclipse by right-clicking on an empty line, selecting Source, and then selecting the Generate hashCode() and equals() option. 
   */
@Override
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((job == null) ? 0 : job.hashCode());
	result = prime * result + job;
	return result;
}

@Override
public boolean equals(Object obj) {
	if (this == obj)
		return true;
	if (obj == null)
		return false;
	if (getClass() != obj.getClass())
		return false;
	KeyPairWritable other = (KeyPairWritable) obj;
	if (job == null) {
		if (other.job != null)
			return false;
	} else if (!job.equals(other.job))
		return false;
	if (age!= other.age)
		return false;
	return true;
}  
 
  
}

